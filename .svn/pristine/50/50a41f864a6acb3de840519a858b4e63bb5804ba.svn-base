package fr.esiag.sim.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import fr.esiag.sim.model.Area;
import fr.esiag.sim.model.CategoryMedecine;
import fr.esiag.sim.model.Medecine;
@Repository
public class MedecineDAOImpl implements AbstractDAO<Medecine>{
	private SessionFactory sessionFactory;
	private static final Logger logger = LoggerFactory.getLogger(AreaDAOImpl.class);
	
	public void setSessionFactory(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}
	@Override
	public void add(Medecine o) {
		Session session = this.sessionFactory.getCurrentSession();
		session.persist(o);
	}
	@Override
	public void update(Medecine o) {
		Session session = this.sessionFactory.getCurrentSession();
		session.update(o);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<Medecine> list() {
		Session session = this.sessionFactory.getCurrentSession();
		List<Medecine> medecineList = session.createQuery("from Medecine").list();
		return medecineList;
	}
	@Override
	public Medecine getById(int id) {
		Session session = this.sessionFactory.getCurrentSession();
		Medecine m = (Medecine) session.load(Medecine.class, new Integer(id));
		logger.info("Room loaded successfully, Room details=" + m);
		return m;
	}
	@Override
	public void remove(int id) {
		Session session = this.sessionFactory.getCurrentSession();
		Medecine m = (Medecine)session.get(Medecine.class, new Integer(id));
		if(m != null){
			Area area = m.getArea();
			area.getMedecines().remove(m);
			
			
			CategoryMedecine cm = m.getCategoryMedecine();
			cm.getMedecines().remove(m);
			
			session.delete(m);
		}
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<Medecine> searchByWording(String wording) {
		Session session = this.sessionFactory.getCurrentSession();
		String hql = "from Medecine m where m.wording = :wording";
		List<Medecine> result = session.createQuery(hql)
		.setParameter("wording", wording)
		.list();
		return result;
	}
	
	
	

}
