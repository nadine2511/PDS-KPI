package fr.esiag.sim.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import fr.esiag.sim.model.Person;
/**
 * Dao of {@link Person}
 * @author NGUYEN Nhat Minh
 * @version 2.2.1
 * @category dao
 * @see {@link Object}
 */
@Repository
public class PersonDAOImpl implements AbstractDAO<Person> {
	
	private static final Logger logger = LoggerFactory.getLogger(PersonDAOImpl.class);

	private SessionFactory sessionFactory;
	
	public void setSessionFactory(SessionFactory sf){
		this.sessionFactory = sf;
	}

	@Override
	public void add(Person o) {
		Session session = this.sessionFactory.getCurrentSession();
		session.persist(o);
		logger.info("Person saved successfully, Person Details="+o);
		
	}

	@Override
	public void update(Person o) {
		Session session = this.sessionFactory.getCurrentSession();
		session.update(o);
		logger.info("Person updated successfully, Person Details="+o);
		
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Person> list() {
		Session session = this.sessionFactory.getCurrentSession();
		List<Person> personsList = session.createQuery("from Person").list();
		for(Person p : personsList){
			logger.info("Person List::"+p);
		}
		return personsList;
	}

	@Override
	public Person getById(int id) {
		Session session = this.sessionFactory.getCurrentSession();		
		Person p = (Person) session.load(Person.class, new Integer(id));
		logger.info("Person loaded successfully, Person details="+p);
		return p;
	}

	@Override
	public void remove(int id) {
		Session session = this.sessionFactory.getCurrentSession();
		Person p = (Person) session.load(Person.class, new Integer(id));
		if(null != p){
			session.delete(p);
		}
		logger.info("Person deleted successfully, person details="+p);
		
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Person> searchByWording(String wording) {
		Session session = this.sessionFactory.getCurrentSession();
		String hql = "from Person p where p.wording = :wording";
		List<Person> result = session.createQuery(hql)
		.setParameter("wording", wording)
		.list();
		return result;
	}

}
